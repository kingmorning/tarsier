<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
               		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                   	http://www.springframework.org/schema/context
       				http://www.springframework.org/schema/context/spring-context-3.0.xsd
       				http://www.springframework.org/schema/tx 
       				http://www.springframework.org/schema/tx/spring-tx-3.0.xsd   
     				http://www.springframework.org/schema/aop 
     				http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       				http://www.springframework.org/schema/util	
       				http://www.springframework.org/schema/util/spring-util-3.0.xsd
       				http://www.springframework.org/schema/mvc
       				http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

	<context:component-scan base-package="com.tarsier.manager">
		<!-- <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" 
			/> -->
	</context:component-scan>

	<context:property-placeholder
		location="classpath:config.properties, file:${user.home}/tarsier-manager/config.properties"
		ignore-resource-not-found="true" file-encoding="utf-8" />
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<util:list id="beanList">
				<ref bean="mappingJacksonHttpMessageConverter" />
			</util:list>
		</property>
	</bean>

	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes" value="application/json">
		</property>
	</bean>
	<bean id="ipCheckFilter"
		class="com.tarsier.util.web.IpCheckAPIFilter"></bean>

	<!-- <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 
		<property name="prefix" value="/jsp/" /> <property name="suffix" value=".jsp" 
		/> </bean> -->
	<!-- 数据源 -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName">
			<value>${jdbc.driver}</value>
		</property>
		<property name="url">
			<value>${jdbc.url}</value>
		</property>
		<property name="username">
			<value>${jdbc.username}</value>
		</property>
		<property name="password">
			<value>${jdbc.password}</value>
		</property>
	</bean>
	<!--事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 使用全注释事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	<!-- 配置sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 实例化sqlSessionFactory时需要使用上述配置好的数据源以及SQL映射文件 -->
		<property name="dataSource" ref="dataSource" />
		<!-- mybatis配置文件路径 -->
		<property name="configLocation" value="classpath:mybatis-conf.xml" />
		<property name="mapperLocations" value="classpath:mapper/*.xml" />
	</bean>
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0">
			<ref bean="sqlSessionFactory" />
		</constructor-arg>
	</bean>
	<!--动态代理实现 不用写dao的实现 -->
	<bean id="MapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 这里的basePackage 指定了dao层接口路劲，这里的dao接口不用自己实现 -->
		<property name="basePackage"
			value="com.tarsier.manager.mapper" />
		<!-- 如果只有一个数据源的话可以不用指定，但是如果有多个数据源的话必须要指定 -->
		<!-- <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" 
			/> -->
		<!--直接制定了sqlsessionTemplate名称，这个和上面的其实是一样的 -->
		<property name="sqlSessionTemplateBeanName" value="sqlSession" />
	</bean>
	<bean id="exceptionResolver"
		class="com.tarsier.manager.exception.ExceptionResolver"></bean>
</beans>